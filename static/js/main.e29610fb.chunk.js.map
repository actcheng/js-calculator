{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["buttons","one","two","three","four","five","six","seven","eight","nine","zero","equals","add","subtract","multiply","divide","clear","clearE","decimal","escape","negative","displayDefault","validKeys","Object","values","numKeys","operator","Button","_this","this","id","props","react_default","a","createElement","className","onClick","handleClick","Component","App","_this2","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","replace","displayNum","displayExpr","exprArr","baseState","handleKeyPress","bind","assertThisInitialized","handleInput","notDoubleDecimal","isConsecutiveOperator","calculation","combineNumber","test","key","includes","displayText","length","ind","op","num1","Number","num2","result","splice","console","log","indexOf","ans","toString","setState","concat","push","slice","event","keyCode","document","addEventListener","App_Button","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e29610fb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nlet buttons = {\n  'one': '1',  'two': '2',  'three': '3',  'four': '4',  'five': '5',\n  'six' : '6',  'seven': '7', 'eight': '8', 'nine': '9', 'zero': '0',\n  'equals': '=', 'add': '+', 'subtract': '-','multiply': 'x',\n  'divide': '/','clear':'C','clearE':'CE','decimal':'.',\n  'escape':'‚Üê','negative':'+/-'\n}\n\nlet displayDefault = '0'\nlet validKeys = Object.values(buttons)\nlet numKeys = ['1','2','3','4','5','6','7','8','9','0']\nlet exprKeys= ['1','2','3','4','5','6','7','8','9','0',\n               '+','-','x','/','.','*']\nlet operator= ['x','/','+','-']\n\nclass Button extends Component {\n  render() {\n    let id = this.props.id;\n    return(\n      <div id={id} className='button' onClick={()=>this.props.handleClick(id)}>{buttons[id]}</div>\n    )\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      replace: true,\n      displayNum: displayDefault,\n      displayExpr: '',\n      exprArr: [],\n    }\n    this.baseState = this.state\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.notDoubleDecimal = this.notDoubleDecimal.bind(this);\n    this.isConsecutiveOperator = this.isConsecutiveOperator.bind(this);\n    this.calculation = this.calculation.bind(this);\n    this.combineNumber = this.combineNumber.bind(this);\n  }\n\n  notDoubleDecimal(displayNum){\n      return !(/\\./).test(displayNum)\n  }\n\n  isConsecutiveOperator(key){\n      return (operator.includes(key) && operator.includes(this.state.displayText[this.state.displayText.length-1]))\n  }\n\n  combineNumber(exprArr, ind, op){\n    let num1 = Number(exprArr[ind-1])\n    let num2 = Number(exprArr[ind+1])\n    let result = 0;\n\n    switch (op) {\n      case 'x':\n        result = num1*num2;\n        break;\n      case '/':\n        result = num1/num2;\n        break;\n      case '+':\n        result = num1+num2;\n        break;\n      case '-':\n        result = num1-num2;\n        break;\n      default:\n        break;\n      }\n\n    exprArr.splice(ind-1,3,result)\n    console.log(exprArr)\n    return exprArr\n  }\n\n  calculation(exprArr){\n    console.log('Caluclation',exprArr)\n    // multiply\n    while (exprArr.indexOf('x')>-1){\n      exprArr = this.combineNumber(exprArr,exprArr.indexOf('x'),'x')\n      console.log('After',exprArr)\n    }\n    // division\n    while (exprArr.indexOf('/')>-1){\n      exprArr = this.combineNumber(exprArr,exprArr.indexOf('/'),'/')\n    }\n    // from beginning\n    while (exprArr.length>1){\n      exprArr = this.combineNumber(exprArr,1,exprArr[1])\n    }\n\n    let ans = exprArr[0].toString();\n\n    this.setState({\n      replace: true,\n      displayNum: ans,\n      displayExpr: '',\n      exprArr: [],\n    })\n    console.log('After calculation:',ans)\n  }\n\n  handleInput(key){\n    console.log('input',this.state.exprArr)\n\n    let displayExpr = this.state.displayExpr;\n    let displayNum = this.state.displayNum;\n    let exprArr = this.state.exprArr;\n\n    if (validKeys.includes(key)){\n      // Number keys\n      if (numKeys.includes(key)){\n        if (this.state.replace===true){\n          displayNum = key;\n          this.setState({\n            displayNum: displayNum,\n            replace: false})\n        } else {\n          displayNum = displayNum.concat(key)\n          this.setState({ displayNum: displayNum })\n        }\n      // decimal\n      } else if (key===buttons['decimal'] && this.notDoubleDecimal(displayNum)){\n        displayNum = displayNum.concat(key)\n        this.setState({ displayNum: displayNum, replace: false })\n      // operator\n      } else if (operator.includes(key)){\n        let op = key;\n\n        if (key==='*'){\n          op = buttons['multiply'];\n        }\n\n        // if (!operator.includes(exprArr[exprArr.length-1])){\n        exprArr.push(displayNum, op)\n        displayExpr = displayExpr.concat(displayNum, op)\n        this.setState({\n          replace: true,\n          displayExpr: displayExpr,\n          exprArr: exprArr\n        })\n      \n      // functions\n      } else if (key===buttons['equals']) {\n        exprArr.push(displayNum)\n        console.log('Before cal', exprArr)\n        this.calculation(exprArr);\n      // calculation\n      } else if (key===buttons['negative']) {\n        displayNum = '-'.concat(displayNum)\n        this.setState({ displayNum: displayNum})\n      } else if (key===buttons['clear']) {\n        this.setState({\n          replace: true,\n          displayNum: displayDefault,\n          displayExpr: '',\n          exprArr: [],\n        })\n        console.log('CLR')\n      } else if (key===buttons['clearE']) {\n        displayNum = displayDefault\n        this.setState({ displayNum: displayNum , replace: true})\n      }else if (key===buttons['escape']){\n        displayNum = displayNum.slice(0,-1)\n        this.setState({ displayNum: displayNum  })\n      }\n    }\n  }\n  handleClick(id){\n    console.log(id,'clicked')\n    this.handleInput(buttons[id])\n  }\n  handleKeyPress(event) {\n    if (validKeys.includes(event.key)){\n      this.handleInput(event.key);\n      console.log(event.key,'pressed');\n    } else if (event.keyCode === 13){\n      this.handleInput('=');\n    }\n  }\n  componentWillMount(){\n    document.addEventListener(\"keydown\", this.handleKeyPress.bind(this));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div id='calculator'>\n          <div id='expression'>{this.state.displayExpr}</div>\n          <div id='display'>{this.state.displayNum}</div>\n          <div id='container'>\n            <Button id='clearE' handleClick={this.handleClick.bind(this)} />\n            <Button id='clear'  handleClick={this.handleClick.bind(this)} />\n            <Button id='escape' handleClick={this.handleClick.bind(this)} />\n            <Button id='divide' handleClick={this.handleClick.bind(this)} />\n            <Button id='one'    handleClick={this.handleClick.bind(this)} />\n            <Button id='two'    handleClick={this.handleClick.bind(this)} />\n            <Button id='three'  handleClick={this.handleClick.bind(this)} />\n            <Button id='multiply' handleClick={this.handleClick.bind(this)} />\n            <Button id='four' handleClick={this.handleClick.bind(this)}/>\n            <Button id='five' handleClick={this.handleClick.bind(this)}/>\n            <Button id='six' handleClick={this.handleClick.bind(this)}/>\n            <Button id='subtract' handleClick={this.handleClick.bind(this)}/>\n            <Button id='seven' handleClick={this.handleClick.bind(this)}/>\n            <Button id='eight' handleClick={this.handleClick.bind(this)}/>\n            <Button id='nine' handleClick={this.handleClick.bind(this)}/>\n            <Button id='add' handleClick={this.handleClick.bind(this)}/>\n            <Button id='negative' handleClick={this.handleClick.bind(this)}/>\n            <Button id='zero' handleClick={this.handleClick.bind(this)}/>\n            <Button id='decimal' handleClick={this.handleClick.bind(this)}/>\n            <Button id='equals' handleClick={this.handleClick.bind(this)}/>\n          </div>\n        </div>\n        <p>Javascript calculator by CT</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}