{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["buttons","one","two","three","four","five","six","seven","eight","nine","zero","equals","add","subtract","multiply","divide","clear","clearE","decimal","escape","negative","displayDefault","validKeys","Object","values","numKeys","exprKeys","operator","seperator","Button","_this","this","id","props","react_default","a","createElement","className","onClick","handleClick","Component","App","_this2","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","reset","displayText","displayExpr","result","baseState","handleKeyPress","bind","assertThisInitialized","handleInput","notDoubleDecimal","isConsecutiveOperator","calculation","combineNumber","key","test","split","pop","includes","length","exprArr","ind","op","num1","Number","num2","splice","expr","indexOf","setState","toString","text","slice","concat","console","log","event","keyCode","document","addEventListener","script","src","async","body","appendChild","App_Button","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.81e6a476.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nlet buttons = {\n  'one': '1',  'two': '2',  'three': '3',  'four': '4',  'five': '5',\n  'six' : '6',  'seven': '7', 'eight': '8', 'nine': '9', 'zero': '0',\n  'equals': '=', 'add': '+', 'subtract': '-','multiply': 'x',\n  'divide': '/','clear':'C','clearE':'CE','decimal':'.',\n  'escape':'‚Üê','negative':'+/-'\n}\n\nlet displayDefault = '0'\nlet validKeys = Object.values(buttons)\nlet numKeys = ['1','2','3','4','5','6','7','8','9','0']\nlet exprKeys= ['1','2','3','4','5','6','7','8','9','0',\n               '+','-','x','/','.','*']\nlet operator= ['x','/','+','-']\nlet seperator = /[x+\\-/]/\n\nclass Button extends Component {\n  render() {\n    let id = this.props.id;\n    return(\n      <div id={id} className='button' onClick={()=>this.props.handleClick(id)}>{buttons[id]}</div>\n    )\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      reset: false,\n      displayText: displayDefault,\n      displayExpr: '',\n      result: displayDefault\n    }\n    this.baseState = this.state\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.notDoubleDecimal = this.notDoubleDecimal.bind(this);\n    this.isConsecutiveOperator = this.isConsecutiveOperator.bind(this);\n    this.calculation = this.calculation.bind(this);\n    this.combineNumber = this.combineNumber.bind(this);\n  }\n\n  notDoubleDecimal(key){\n    if (key!==buttons['decimal']){\n      return true;\n    } else {\n      return !(/\\./).test(this.state.displayText.split(seperator).pop())\n    }\n  }\n\n  isConsecutiveOperator(key){\n      return (operator.includes(key) && operator.includes(this.state.displayText[this.state.displayText.length-1]))\n  }\n\n  combineNumber(exprArr, ind, op){\n    let num1 = Number(exprArr[ind-1])\n    let num2 = Number(exprArr[ind+1])\n    let result = 0;\n\n    switch (op) {\n      case 'x':\n        result = num1*num2;\n        break;\n      case '/':\n        result = num1/num2;\n        break;\n      case '+':\n        result = num1+num2;\n        break;\n      case '-':\n        result = num1-num2;\n        break;\n      default:\n        break;\n      }\n    exprArr.splice(ind-1,3,result)\n    return exprArr;\n  }\n\n  calculation(expr){\n    let exprArr = expr.split(/([x+\\-/])/g);\n    // multiply\n    while (exprArr.indexOf('x')>-1){\n      exprArr = this.combineNumber(exprArr,exprArr.indexOf('x'),'x')\n    }\n    // division\n    while (exprArr.indexOf('/')>-1){\n      exprArr = this.combineNumber(exprArr,exprArr.indexOf('/'),'/')\n    }\n    // from beginning\n    while (exprArr.length>1){\n      exprArr = this.combineNumber(exprArr,1,exprArr[1])\n    }\n    this.setState({\n      displayText:exprArr[0],\n      result: exprArr[0].toString(),\n      reset: true})\n  }\n\n  handleInput(key){\n\n    let text = this.state.result;\n    if (this.state.reset){\n       this.setState(this.baseState)\n    } else {\n      text = this.state.displayText;\n    }\n\n    if (exprKeys.includes(key)){\n      if (text===displayDefault){\n        if (numKeys.includes(key)){\n          this.setState({displayText: key})\n        }\n      } else if (this.notDoubleDecimal(key)) {\n        if (this.isConsecutiveOperator(key)){\n          text = text.slice(0,-1)\n        }\n        if (key==='*'){\n          this.setState({displayText: text.concat(buttons['multiply'])})\n        } else {\n          this.setState({displayText: text.concat(key)})\n        }\n\n      }\n    } else if (key===buttons['equals']) {\n      let expr = text\n      if (operator.includes(expr.split('').pop())){\n        expr = expr.slice(0,-1)\n      }\n      this.setState({ displayExpr:expr })\n      this.calculation(expr);\n    } else if (key===buttons['clear']) {\n      this.setState({displayText: displayDefault, displayExpr:''})\n    } else if (key===buttons['escape']){\n        this.setState({displayText: text.slice(0,-1)})\n    }\n  }\n  handleClick(id){\n    console.log(id,'clicked')\n    this.handleInput(buttons[id])\n  }\n  handleKeyPress(event) {\n    if (validKeys.includes(event.key)){\n      this.handleInput(event.key);\n      console.log(event.key,'pressed');\n    } else if (event.keyCode === 13){\n      this.handleInput('=');\n    }\n  }\n  componentWillMount(){\n    document.addEventListener(\"keydown\", this.handleKeyPress.bind(this));\n  }\n  componentDidMount () {\n        const script = document.createElement(\"script\");\n        script.src = \"https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js\";\n        script.async = true;\n        document.body.appendChild(script);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div id='calculator'>\n          <div id='expression'>{this.state.displayExpr}</div>\n          <div id='display'>{this.state.displayText}</div>\n          <div id='container'>\n            <Button id='clearE' handleClick={this.handleClick.bind(this)} />\n            <Button id='clear'  handleClick={this.handleClick.bind(this)} />\n            <Button id='escape' handleClick={this.handleClick.bind(this)} />\n            <Button id='divide' handleClick={this.handleClick.bind(this)} />\n            <Button id='one'    handleClick={this.handleClick.bind(this)} />\n            <Button id='two'    handleClick={this.handleClick.bind(this)} />\n            <Button id='three'  handleClick={this.handleClick.bind(this)} />\n            <Button id='multiply' handleClick={this.handleClick.bind(this)} />\n            <Button id='four' handleClick={this.handleClick.bind(this)}/>\n            <Button id='five' handleClick={this.handleClick.bind(this)}/>\n            <Button id='six' handleClick={this.handleClick.bind(this)}/>\n            <Button id='subtract' handleClick={this.handleClick.bind(this)}/>\n            <Button id='seven' handleClick={this.handleClick.bind(this)}/>\n            <Button id='eight' handleClick={this.handleClick.bind(this)}/>\n            <Button id='nine' handleClick={this.handleClick.bind(this)}/>\n            <Button id='add' handleClick={this.handleClick.bind(this)}/>\n            <Button id='negative' handleClick={this.handleClick.bind(this)}/>\n            <Button id='zero' handleClick={this.handleClick.bind(this)}/>\n            <Button id='decimal' handleClick={this.handleClick.bind(this)}/>\n            <Button id='equals' handleClick={this.handleClick.bind(this)}/>\n          </div>\n        </div>\n        <p>Javascript calculator by CT</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}